{"version":3,"sources":["Store/history/index.js","Layout/Guest/Components/Footer/Footer.js","Components/Loader/Loader.js","Layout/Guest/Guest.js","Store/action/loader/index.js","Store/actionType/index.js","Layout/Guest/index.js","Routes/Routes.js","Routes/PrivateRoutes.js","Routes/LoginRoute.js","App.js","serviceWorker.js","Store/reducers/loader.js","Store/reducers/index.js","Store/saga/axiosAPI.js","Store/saga/apiSaga.js","Store/saga/index.js","Store/index.js","index.js"],"names":["createBrowserHistory","Footer","props","className","Loader","show","style","display","Guest","route","fallback","renderRoutes","routes","setStartLoader","_payload","type","payload","setStopLoader","connect","state","dispatch","bindActionCreators","path","component","GuestLayout","to","exact","lazy","isPrivate","PrivateRoutes","trackPage","rest","render","location","pathname","from","LoginRoute","toast","loader","loaderStatus","history","basename","process","resolvePrivateRoutes","Array","isArray","map","isAuth","Boolean","window","hostname","match","INITIAL_STATE","message","action","rootReducer","combineReducers","instance","axios","create","configuration","headers","Accept","interceptors","request","use","config","newHeaders","Object","assign","error","Promise","reject","getAxios","invokeAPI","dispatchFulfilled","dispatchRejected","apiSaga","pendingRequests","similarPendingRequestExist","actionType","url","method","data","apiConfig","resolve","put","response","api","Error","source","CancelToken","cancelToken","token","call","get","post","patch","delete","status","Number","actualAction","actionChannel","actionQueue","take","fork","rootSaga","all","sagaMiddleware","createSagaMiddleware","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","StrictMode","Store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"uRAGeA,cAAqB,I,OCsBrBC,EAvBA,SAACC,GACd,OACE,kBAAC,WAAD,KACE,4BAAQC,UAAU,eAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gCAEjB,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,0FCKHC,EAjBA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACE,yBAAKF,UAAU,SAASG,MAAO,CAAEC,QAASF,EAAO,QAAU,SACzD,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qBACb,8BACA,8BACA,8BACA,mCCaGK,EAjBD,SAACN,GAAW,IAChBO,EAAUP,EAAVO,MAER,OACE,kBAAC,WAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,CAAQL,MAAM,KAC/BM,YAAaF,EAAMG,SAEtB,kBAAC,EAAD,QCbOC,EAAiB,SAACC,GAC7B,MAAO,CAAEC,KCHiB,eDGGC,QAASF,IAG3BG,EAAgB,SAACH,GAC5B,MAAO,CAAEC,KCNgB,cDMGC,QAASF,IEYxBI,mBAdf,SAAyBC,EAAOjB,GAC9B,MAAO,MAGT,SAA4BkB,GAC1B,OAAOC,YACL,CACER,iBACAI,iBAEFG,KAIWF,CAA6CV,GCe7CI,EA5BA,CACb,CACEU,KAAM,QACNC,UAAWC,EAEXZ,OAAQ,CACN,CACEW,UAAW,kBAAM,kBAAC,IAAD,CAAUE,GAAG,cAIpC,CACEhB,MAAO,IACPc,UAAWC,EACXZ,OAAQ,CACN,CACEU,KAAM,IACNI,OAAO,EACPH,UAAWI,gBAAK,kBAAM,gCACtBC,WAAW,GAEb,CACEL,UAAW,kBAAM,kBAAC,IAAD,CAAUE,GAAG,W,QCTvBI,EAjBO,SAAC,GAAiD,EAA/CN,UAAgD,IAA1BO,EAAyB,EAAzBA,UAAcC,EAAW,yCAEtE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC9B,GAEP,OADA4B,EAAU5B,EAAM+B,SAASC,UAIvB,kBAAC,IAAD,CAAUT,GAAI,CAAES,SAAU,IAAKf,MAAO,CAAEgB,KAAMjC,EAAM+B,kBCO/CG,EAjBI,SAAC,GAAiD,EAA/Cb,UAAgD,IAA1BO,EAAyB,EAAzBA,UAAcC,EAAW,yCAEnE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC9B,GAEP,OADA4B,EAAU5B,EAAM+B,SAASC,UAIvB,kBAAC,IAAD,CAAUT,GAAI,CAAES,SAAU,IAAKf,MAAO,CAAEgB,KAAMjC,EAAM+B,kB,MCsD/Cf,mBAjBS,SAACC,GACvB,MAAO,CACLkB,MAAOlB,EAAMmB,OAAOD,MACpBE,aAAcpB,EAAMmB,OAAOC,iBAI/B,SAA4BnB,GAC1B,OAAOC,YACL,CACER,iBACAI,iBAEFG,KAIWF,EA3Bf,SAAahB,GAAQ,IACXqC,EAAiBrC,EAAjBqC,aACR,OACE,kBAAC,IAAD,CAAQC,QAASA,EAASC,SAAUC,IAClC,kBAAC,EAAD,CAAQrC,KAAMkC,IACb5B,YA1BsB,SAAvBgC,EAAwB/B,GAC5B,GAAIA,GAAUgC,MAAMC,QAAQjC,GAC1B,OAAOA,EAAOkC,KAAI,SAACrC,GAcjB,OAbIA,EAAMmB,YACRnB,EAAMuB,OAAS,SAAC9B,GAAD,OACb,kBAAC,EAAD,eAAcqB,UAAWd,EAAMc,WAAerB,MAG9CO,EAAMsC,SACRtC,EAAMuB,OAAS,SAAC9B,GAAD,OACb,kBAAC,EAAD,eAAYqB,UAAWd,EAAMc,WAAerB,MAG5CO,EAAMG,QACR+B,EAAqBlC,EAAMG,QAEtBH,KAUOkC,CAAqB/B,QChCrBoC,QACW,cAA7BC,OAAOhB,SAASiB,UAEe,UAA7BD,OAAOhB,SAASiB,UAEhBD,OAAOhB,SAASiB,SAASC,MACvB,2D,YCjBAC,EAAgB,CACpBb,cAAc,EACdF,MAAO,CACLgB,QAAS,GACTtC,KAAM,KAmBKuB,EAhBA,WAAoC,IAAnCnB,EAAkC,uDAA1BiC,EAAeE,EAAW,uCAChD,OAAQA,EAAOvC,MACb,IPVwB,eOWtB,OAAO,2BACFI,GADL,IAEEoB,cAAc,IAElB,IPduB,cOerB,OAAO,2BACFpB,GADL,IAEEoB,cAAc,IAElB,QACE,OAAOpB,ICdEoC,EAJKC,YAAgB,CAClClB,W,wCCaImB,E,OAAWC,EAAMC,OAAO,CAAEC,cAfV,CACpBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,+BAAgC,kCAChC,+BAAgC,CAC9B,SACA,SACA,mBACA,eACA,qBAONL,EAASM,aAAaC,QAAQC,KAC5B,SAACC,GAGC,IACIC,EAAaD,EAAOL,QAMxB,OAAOO,OAAOC,OAAO,GAAIH,EAAQ,CAAEL,QAASM,OAE9C,SAACG,GAAD,OAAWC,QAAQC,OAAOF,MAG5B,IAEeG,EAFE,kBAAMhB,G,WCzBbiB,G,WAiFAC,G,WAIAC,G,WAQAC,GAlGJC,EAAkB,GAElBC,EAA6B,SAACC,EAAYC,GAAb,OACjCH,EAAgBE,IAAeF,EAAgBE,GAAYC,MAAQA,GAErE,SAAUP,EAAUpB,GAApB,6FAYI,OAXMtC,EAAYsC,EAAZtC,QAENkE,EAOElE,EAPFkE,OACAD,EAMEjE,EANFiE,IACAE,EAKEnE,EALFmE,KACAC,EAIEpE,EAJFoE,UACQJ,EAGNhE,EAHFsC,OACA+B,EAEErE,EAFFqE,QACAb,EACExD,EADFwD,OATJ,kBAYUc,YAAIzE,KAZd,OAaQ0E,EAAW,GACTC,EAAMf,IAdhB,KAeYS,EAfZ,OAgBW,QAhBX,QA+BW,SA/BX,QAmCW,QAnCX,QAuCW,UAvCX,QA2CW,WA3CX,6BAiBYH,EAA2BC,EAAYC,GAjBnD,uBAkBgB,IAAIQ,MAAM,mCAlB1B,QAwBqB,OAJLC,EAASC,cAAYD,SACrBE,EAAcF,EAAOG,MAC3Bf,EAAgBE,GAAc,CAAEC,MAAKO,MAAKE,UAtBpD,UAwB2BI,YAAK,CAACN,EAAKA,EAAIO,KAAMd,EAAjB,YAAC,eACjBG,GADgB,IAEnBQ,iBA1BZ,QAwBUL,EAxBV,mDAgCmB,OAhCnB,UAgCyBO,YAAK,CAACN,EAAKA,EAAIQ,MAAOf,EAAKE,EAAvB,eAAkCC,IAhC/D,eAgCQG,EAhCR,oCAoCmB,OApCnB,UAoCyBO,YAAK,CAACN,EAAKA,EAAIF,KAAML,EAAKE,EAAtB,eAAiCC,IApC9D,eAoCQG,EApCR,oCAwCmB,OAxCnB,UAwCyBO,YAAK,CAACN,EAAKA,EAAIS,OAAQhB,EAAKE,EAAxB,eAAmCC,IAxChE,eAwCQG,EAxCR,oCA4CmB,OA5CnB,UA4CyBO,YACf,CAACN,EAAKA,EAAIU,QACVjB,EACA,CAAEE,QAHiB,eAIdC,IAhDf,eA4CQG,EA5CR,0CAqDc,IAAIE,MAAJ,qBAAwBP,EAAxB,uBArDd,WAwDQK,EAASY,SAAWC,OAAO,MAAQb,EAASY,SAAWC,OAAO,KAxDtE,iBAyDM,uBAAOzB,EAAkBrB,EAAQiC,EAASJ,MAA1C,SAzDN,gCA4DM,uBAAOP,EAAiB5D,EAAQsC,OAAQA,EAAQ,yBAAhD,SA5DN,eA+DWwB,EAAgBE,GACnBK,GACFA,EAAQE,EAASJ,MAjEvB,wBAuEI,OAvEJ,0BAoEQ,KAAMI,UAAY,KAAMA,SAASY,OAGrC,gBAAOvB,EAAiB5D,EAAQsC,OAAQA,EAAjB,MAAvB,SAvEJ,QAwEQkB,GACFA,EAAO,EAAD,IAzEZ,QA6EI,OA7EJ,oBA6EUc,YAAIrE,KA7Ed,wFAiFA,SAAU0D,EAAkBrB,EAAQiC,GAApC,iEACE,OADF,SACQD,YAAI,CAAEvE,KAAK,GAAD,OAAKuC,EAAOtC,QAAQsC,OAApB,YAAsCtC,QAASuE,IADjE,uCAIA,SAAUX,EAAiBI,EAAY1B,EAAQgB,GAA/C,iEACE,OADF,SACQgB,YAAI,CACRvE,KAAK,GAAD,OAAKiE,EAAL,UACJqB,aAAc/C,EACdtC,QAAS,CAAEuE,SAAUjB,KAJzB,uCAQA,SAAUO,IAAV,yEACsB,OADtB,SAC4ByB,YAAc,kBAD1C,OACQC,EADR,cAGmB,OAHnB,SAGyBC,YAAKD,GAH9B,OAII,OADMjD,EAHV,gBAIUmD,YAAK/B,EAAWpB,GAJ1B,8DASeuB,Q,WC5GU6B,GAAV,SAAUA,IAAV,iEACX,OADW,SACLC,YAAI,CACN9B,MAFO,uCCKf,IAAM+B,EAAiBC,cACjBC,EAAkB7D,OAAO8D,sCAAwCC,IAEjEC,EAAQC,YACV3D,EACAuD,EAAgBK,YAAgBP,KAGpCA,EAAeQ,IAAIV,GACJO,QCVfI,IAASrF,OACP,kBAAC,IAAMsF,WAAP,KACE,kBAAC,IAAD,CAAeL,MAAOM,GACpB,kBAAC,EAAD,QAGJC,SAASC,eAAe,SPqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1D,GACL2D,QAAQ3D,MAAMA,EAAMjB,c","file":"static/js/main.515233df.chunk.js","sourcesContent":["// history.js\nimport { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n})","import React, { Fragment } from \"react\";\n\nconst Footer = (props) => {\n  return (\n    <Fragment>\n      <footer className=\"footer_part\">\n        <div className=\"container\">\n          <div className=\"row justify-content-around\"></div>\n        </div>\n        <div className=\"copyright_part\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"copyright_text\">\n                  <p>Copyright &copy; 2020. Color-Test All rights reserved</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Loader = ({ show }) => {\n  return (\n    <div className=\"loader\" style={{ display: show ? \"block\" : \"none\" }}>\n      <div className=\"loader_inner\">\n        <div className=\"loader_content\">\n          <div className=\"loadmore-ellipsis\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { Suspense, Fragment } from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport PropTypes from \"prop-types\";\n// import TopBar from \"./Components/TopBar\";\nimport Footer from \"./Components/Footer\";\nimport Loader from \"../../Components/Loader\";\n\nconst Guest = (props) => {\n  const { route } = props;\n\n  return (\n    <Fragment>\n      <Suspense fallback={<Loader show={true} />}>\n        {renderRoutes(route.routes)}\n      </Suspense>\n      <Footer />\n    </Fragment>\n  );\n};\n\nGuest.propTypes = {\n  route: PropTypes.object,\n};\n\nexport default Guest;\n","import { START_LOADER, STOP_LOADER } from \"../../actionType\";\n\nexport const setStartLoader = (_payload) => {\n  return { type: START_LOADER, payload: _payload };\n};\n\nexport const setStopLoader = (_payload) => {\n  return { type: STOP_LOADER, payload: _payload };\n};\n","export const START_LOADER = \"START_LOADER\";\nexport const STOP_LOADER = \"STOP_LOADER\";\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Guest from \"./Guest\";\nimport { setStartLoader, setStopLoader } from \"../../Store/action/loader\";\n\nfunction mapStateToProps(state, props) {\n  return {};\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setStartLoader,\n      setStopLoader,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Guest);\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { lazy } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport GuestLayout from \"../Layout/Guest\";\n\nconst routes = [\n  {\n    path: \"/auth\",\n    component: GuestLayout,\n    // AuthLayout,\n    routes: [\n      {\n        component: () => <Redirect to=\"/auth\" />,\n      },\n    ],\n  },\n  {\n    route: \"*\",\n    component: GuestLayout,\n    routes: [\n      {\n        path: \"/\",\n        exact: true,\n        component: lazy(() => import(\"../View/Home\")),\n        isPrivate: false,\n      },\n      {\n        component: () => <Redirect to=\"/\" />,\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nconst PrivateRoutes = ({ component: Component, trackPage, ...rest }) => {\n  const userToken = null;\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        trackPage(props.location.pathname);\n        return userToken ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoutes;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nconst LoginRoute = ({ component: Component, trackPage, ...rest }) => {\n  const userToken = 2;\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        trackPage(props.location.pathname);\n        return !userToken ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        );\n      }}\n    />\n  );\n};\n\nexport default LoginRoute;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { renderRoutes } from \"react-router-config\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n// Internal imports\nimport history from \"./Store/history/index\";\nimport routes from \"./Routes/Routes\";\nimport PrivateRoute from \"./Routes/PrivateRoutes\";\nimport LoginRoute from \"./Routes/LoginRoute\";\nimport Loader from \"./Components/Loader\";\nimport { setStartLoader, setStopLoader } from \"./Store/action/loader\";\n\n// Style imports\nimport \"./App.css\";\nimport \"./index.css\";\n\nconst resolvePrivateRoutes = (routes) => {\n  if (routes && Array.isArray(routes)) {\n    return routes.map((route) => {\n      if (route.isPrivate) {\n        route.render = (props) => (\n          <PrivateRoute component={route.component} {...props} />\n        );\n      }\n      if (route.isAuth) {\n        route.render = (props) => (\n          <LoginRoute component={route.component} {...props} />\n        );\n      }\n      if (route.routes) {\n        resolvePrivateRoutes(route.routes);\n      }\n      return route;\n    });\n  }\n};\n\nfunction App(props) {\n  const { loaderStatus } = props;\n  return (\n    <Router history={history} basename={process.env.PUBLIC_URL}>\n      <Loader show={loaderStatus} />\n      {renderRoutes(resolvePrivateRoutes(routes))}\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    toast: state.loader.toast,\n    loaderStatus: state.loader.loaderStatus,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      setStartLoader,\n      setStopLoader,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { START_LOADER, STOP_LOADER } from \"../actionType\";\nconst INITIAL_STATE = {\n  loaderStatus: false,\n  toast: {\n    message: \"\",\n    type: \"\",\n  },\n};\nconst loader = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case START_LOADER:\n      return {\n        ...state,\n        loaderStatus: true,\n      };\n    case STOP_LOADER:\n      return {\n        ...state,\n        loaderStatus: false,\n      };\n    default:\n      return state;\n  }\n};\nexport default loader;\n","import { combineReducers } from \"redux\";\nimport loader from \"./loader\";\n\nconst rootReducer = combineReducers({\n  loader,\n});\n\nexport default rootReducer;\n","import axios from \"axios\";\n\nconst configuration = {\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": [\n      \"Origin\",\n      \"Accept\",\n      \"X-Requested-With\",\n      \"Content-Type\",\n      \"Authorization\",\n    ],\n  },\n};\n\nconst instance = axios.create({ configuration });\n\ninstance.interceptors.request.use(\n  (config) => {\n    // const oAuthTokan = localStorage.getItem('token') || null;\n    // const token = getToken() || null;\n    const token = null;\n    let newHeaders = config.headers;\n    if (token) {\n      newHeaders = Object.assign({}, newHeaders, {\n        Authorization: `Bearer ${token}`,\n      });\n    }\n    return Object.assign({}, config, { headers: newHeaders });\n  },\n  (error) => Promise.reject(error)\n);\n\nconst getAxios = () => instance;\n\nexport default getAxios;\n","import { CancelToken } from \"axios\";\nimport { actionChannel, take, fork, call, put } from \"redux-saga/effects\";\nimport getAxios from \"./axiosAPI\";\nimport { setStartLoader, setStopLoader } from \"../action/loader\";\n\nconst pendingRequests = {};\n\nconst similarPendingRequestExist = (actionType, url) =>\n  pendingRequests[actionType] && pendingRequests[actionType].url === url;\n\nfunction* invokeAPI(action) {\n  const { payload } = action;\n  const {\n    method,\n    url,\n    data,\n    apiConfig,\n    action: actionType,\n    resolve,\n    reject,\n  } = payload;\n  try {\n    yield put(setStartLoader());\n    let response = {};\n    const api = getAxios();\n    switch (method) {\n      case \"GET\": {\n        if (similarPendingRequestExist(actionType, url)) {\n          throw new Error(\"Similar axios request detected!\");\n        } else {\n          const source = CancelToken.source();\n          const cancelToken = source.token;\n          pendingRequests[actionType] = { url, api, source };\n\n          response = yield call([api, api.get], url, {\n            ...apiConfig,\n            cancelToken,\n          });\n        }\n        break;\n      }\n      case \"POST\":\n        response = yield call([api, api.post], url, data, { ...apiConfig });\n        break;\n\n      case \"PUT\":\n        response = yield call([api, api.put], url, data, { ...apiConfig });\n        break;\n\n      case \"PATCH\":\n        response = yield call([api, api.patch], url, data, { ...apiConfig });\n        break;\n\n      case \"DELETE\":\n        response = yield call(\n          [api, api.delete],\n          url,\n          { data },\n          { ...apiConfig }\n        );\n        break;\n\n      default:\n        throw new Error(`API method ${method} is not supported!`);\n    }\n    // debugger;\n    if (response.status === Number(200) || response.status === Number(201)) {\n      yield* dispatchFulfilled(action, response.data);\n      // yield put(showToastMessage({ message: _get(response, 'data.message', ''), type: _get(response, 'data.type', '') }));\n    } else {\n      yield* dispatchRejected(payload.action, action, \"Internal server error\");\n      // yield put(showToastMessage({ message: 'Internal error, Try again', type: 'error' }));\n    }\n    delete pendingRequests[actionType];\n    if (resolve) {\n      resolve(response.data);\n    }\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      //logout user and redirect to login screen\n    }\n    yield* dispatchRejected(payload.action, action, error);\n    if (reject) {\n      reject(error);\n    }\n    // yield put(showToastMessage({ message: 'Internal error, Try again', type: 'error' }));\n  } finally {\n    yield put(setStopLoader());\n  }\n}\n\nfunction* dispatchFulfilled(action, response) {\n  yield put({ type: `${action.payload.action}_SUCCESS`, payload: response });\n}\n\nfunction* dispatchRejected(actionType, action, error) {\n  yield put({\n    type: `${actionType}_ERROR`,\n    actualAction: action,\n    payload: { response: error },\n  });\n}\n\nfunction* apiSaga() {\n  const actionQueue = yield actionChannel(\"API_INVOCATION\");\n  while (true) {\n    const action = yield take(actionQueue);\n    yield fork(invokeAPI, action);\n  }\n}\n\nexport { invokeAPI };\nexport default apiSaga;\n","import {all} from \"redux-saga/effects\";\nimport apiSaga from './apiSaga';\n\n\nexport default function* rootSaga() {\n    yield all([\n        apiSaga()\n    ]);\n}","import {\n    createStore,\n    applyMiddleware,\n    compose\n} from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './saga/index'\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancer(applyMiddleware(sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as StoreProvider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from \"./Store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={Store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}